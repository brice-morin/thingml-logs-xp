import "pim/basic.thingml"

thing BasicPosix includes Basic 
@c_header "#include <time.h>
#include <stdlib.h>
#include <errno.h>"
@c_global "struct timespec t;

typedef struct {
	unsigned long size,resident,share,text,lib,data,dt;
} statm_t;"
{	
	function quit() @monitor "not" do
		`exit(0);`
	end
	
	function timestamp() : UInt32 @monitor "not" do
		`clock_gettime(CLOCK_REALTIME, &t);`
		return `t.tv_sec*1000 + t.tv_nsec/1000000` as UInt32
	end
	
	function usedMemory() : UInt32 @monitor "not" do
		`statm_t result;
		const char* statm_path = "/proc/self/statm";
		FILE *f = fopen(statm_path, "r");
		if (!f) {`
			return -1	
		`}
		if (7 != fscanf(f, "%ld %ld %ld %ld %ld %ld %ld", &result.size, &result.resident, &result.share, &result.text, &result.lib, &result.data, &result.dt)) {`
			return -1
		`}`
		return `result.size` as UInt32
	end
	
	function sleep1ms() do
		`struct timespec ts;
    	int res;
    	ts.tv_sec = 1 / 1000;
    	ts.tv_nsec = 1 * 1000000;
    	do {
        	res = nanosleep(&ts, &ts);
    	} while (res && errno == EINTR);
		`
	end
}

configuration test
@docker
{		
	instance main : BasicPosix
	connector main.p => main.p2
}


