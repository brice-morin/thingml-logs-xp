import "pim/BreakoutGame.thingml"

thing BreakoutGameGo includes BreakoutGame 
@go_import `os`
@go_import `time`
@go_import `runtime`
{	
	function quit() @monitor "not" do
		`runtime.GC();`
		println ">done in ", stopTime-startTime, "ms!"
		println ">lives:", lives, ",score:", score, ",level:", level, ",bx:", bx, ",by:", by, ",padx:", padx
		println ">usedMem:", usedMemory()
		`os.Exit(0);`
	end
	
	function timestamp() : UInt32 @monitor "not" return `uint32(time.Now().UnixNano() / int64(time.Millisecond))` as UInt32
	
	function usedMemory() : UInt32 @monitor "not" do
		`runtime.GC();`
		`var m runtime.MemStats
		runtime.ReadMemStats(&m)`
		return `m.HeapAlloc` as UInt32
	end
	
	function unsetBit(variable : UInt8, bit : UInt8) : UInt8 return (``&variable&` & ^(1 << `& bit &`)`) as UInt8
}

configuration test
@docker "perf"
{
	instance main : BreakoutGameGo
	instance disp : HeadlessDisplay
	instance timer : TimerGo
	instance ctrl : BasicIAController

	connector main.clock => timer.timer
	connector main.display => disp.display
	connector main.controller => ctrl.controls
	connector ctrl.game => main.ia
}
