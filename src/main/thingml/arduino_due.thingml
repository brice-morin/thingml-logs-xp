import "pim/BreakoutGame.thingml"

thing BreakoutGameArduino includes BreakoutGame 
@c_global `extern "C" char* sbrk(int incr);`
{	
	readonly property RAM_SIZE : UInt32 = 98304 //96kB
	
	function quit() @monitor "not" do
		println ">done in ", stopTime-startTime, "ms!"
		println ">lives:", lives, ",score:", score, ",level:", level, ",bx:", bx, ",by:", by, ",padx:", padx
		println ">usedMem:", usedMemory()
	end
	
	function timestamp() : UInt32 @monitor "not" do
		return `millis()` as UInt32
	end
	
	function usedMemory() : UInt32 @monitor "not" do
		`char top;`
		return RAM_SIZE - `(&top - reinterpret_cast<char*>(sbrk(0)))` as UInt32
	end
	
	function unsetBit(variable : UInt8, bit : UInt8) : UInt8 return (``&variable&` & ~(1 << `& bit &`)`) as UInt8
}

configuration test
@arduino_stdout "Serial"
@arduino_stdout_baudrate "250000"
{		
	instance game : BreakoutGameArduino
	instance disp : HeadlessDisplay
	instance timer : TimerArduino

	connector game.clock => timer.timer
	connector game.display => disp.display
	connector game.req_game => game.pro_game

	instance ctrl : BasicIAController
	connector game.controller => ctrl.controls
	connector ctrl.game => game.ia
}


