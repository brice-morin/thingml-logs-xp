/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : Binary2StringLogger
 **/
public class Binary2StringLogger extends Component implements IBinary2StringLogger_log {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tACTIVATE_ON_STARTUP = " + Logger_ACTIVATE_ON_STARTUP_var;
result += "\tHAS_SIGNED_BYTE = " + Logger_HAS_SIGNED_BYTE_var;
result += "";
return result;
}

public synchronized void log_on_via_log(){
final Event _msg = log_onType.instantiate();
_msg.setPort(log_port);
receive(_msg);
}

public synchronized void log_off_via_log(){
final Event _msg = log_offType.instantiate();
_msg.setPort(log_port);
receive(_msg);
}

public synchronized void log_via_log(byte[] LogMsgs_log_payload_var, int LogMsgs_log_size_var){
final Event _msg = logType.instantiate(LogMsgs_log_payload_var, LogMsgs_log_size_var);
_msg.setPort(log_port);
receive(_msg);
}

//Attributes
private boolean Logger_ACTIVATE_ON_STARTUP_var;
private boolean Logger_HAS_SIGNED_BYTE_var;
//Ports
private Port log_port;
//Message types
protected final Log_onMessageType log_onType = new Log_onMessageType();
protected final Log_offMessageType log_offType = new Log_offMessageType();
protected final LogMessageType logType = new LogMessageType();
//Empty Constructor
public Binary2StringLogger() {
super();
}

//Getters and Setters for non readonly/final attributes
public boolean getLogger_ACTIVATE_ON_STARTUP_var() {
return Logger_ACTIVATE_ON_STARTUP_var;
}

public Binary2StringLogger initLogger_ACTIVATE_ON_STARTUP_var(boolean Logger_ACTIVATE_ON_STARTUP_var) {
this.Logger_ACTIVATE_ON_STARTUP_var = Logger_ACTIVATE_ON_STARTUP_var;
return this;
}

public boolean getLogger_HAS_SIGNED_BYTE_var() {
return Logger_HAS_SIGNED_BYTE_var;
}

public Binary2StringLogger initLogger_HAS_SIGNED_BYTE_var(boolean Logger_HAS_SIGNED_BYTE_var) {
this.Logger_HAS_SIGNED_BYTE_var = Logger_HAS_SIGNED_BYTE_var;
return this;
}

//Getters for Ports
public Port getLog_port() {
return log_port;
}
private CompositeState buildLogger(){
final AtomicState state_Logger_null_STARTUP = new AtomicState("STARTUP");
final AtomicState state_Logger_null_ON = new AtomicState("ON");
final AtomicState state_Logger_null_OFF = new AtomicState("OFF");
Transition h1562019228 = new Transition();
h1562019228.from(state_Logger_null_STARTUP).to(state_Logger_null_ON);
h1562019228.guard((Event e)->{
return getLogger_ACTIVATE_ON_STARTUP_var();
});

Transition h812708838 = new Transition();
h812708838.from(state_Logger_null_STARTUP).to(state_Logger_null_OFF);
h812708838.guard((Event e)->{
return  !(getLogger_ACTIVATE_ON_STARTUP_var());
});

Handler h1338435446 = new Handler();
h1338435446.from(state_Logger_null_ON);
h1338435446.event(logType);
h1338435446.port(log_port);
h1338435446.action((Event e)->{
final LogMessageType.LogMessage log = (LogMessageType.LogMessage) e;
do_log((byte[]) (log.payload), (int) (log.size));
});

Transition h1252142274 = new Transition();
h1252142274.from(state_Logger_null_ON).to(state_Logger_null_OFF);
h1252142274.event(log_offType);
h1252142274.port(log_port);
Transition h912060263 = new Transition();
h912060263.from(state_Logger_null_OFF).to(state_Logger_null_ON);
h912060263.event(log_onType);
h912060263.port(log_port);
final CompositeState state_Logger = new CompositeState("null");
state_Logger.onEntry(()->{
});
state_Logger.add(state_Logger_null_STARTUP);
state_Logger.add(state_Logger_null_ON);
state_Logger.add(state_Logger_null_OFF);
state_Logger.initial(state_Logger_null_STARTUP);
return state_Logger;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
log_port = new Port("log", this);
} else {
log_port = ((Binary2StringLogger)root).log_port;
}
if (session == null){
//Init state machine
behavior = buildLogger();
}
return this;
}

 byte get_byte(final byte Binary2StringLogger_get_byte_b_var) {
if(getLogger_HAS_SIGNED_BYTE_var()) {
return (byte) ((Binary2StringLogger_get_byte_b_var & 0xFF));

} else {
return (byte) (Binary2StringLogger_get_byte_b_var);

}
}
 void do_log(final byte[] Binary2StringLogger_do_log_payload_var, final int Binary2StringLogger_do_log_size_var) {
final byte log_type_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(0)])));

final byte inst_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(1)])));

if(log_type_var == 0) {
final byte func__var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

if(inst_var == 0) {
if(func__var == 1) {
System.out.println(""+("function_called(BreakoutGame0, initColors, void")+(", _")+(")"));

} else {
if(func__var == 2) {
System.out.println(""+("function_called(BreakoutGame0, resetBall, void")+(", _")+(")"));

} else {
if(func__var == 3) {
System.out.println(""+("function_called(BreakoutGame0, eraseBall, void")+(", _")+(")"));

} else {
if(func__var == 4) {
System.out.println(""+("function_called(BreakoutGame0, drawBall, void")+(", _")+(")"));

} else {
if(func__var == 5) {
System.out.println(""+("function_called(BreakoutGame0, erasePad, void")+(", _")+(")"));

} else {
if(func__var == 6) {
System.out.println(""+("function_called(BreakoutGame0, drawPad, void")+(", _")+(")"));

} else {
if(func__var == 7) {
System.out.println(""+("function_called(BreakoutGame0, drawCountDown, void")+(", _")+(", c=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(func__var == 8) {
System.out.println(""+("function_called(BreakoutGame0, drawWalls, void")+(", _")+(")"));

} else {
if(func__var == 9) {
System.out.println(""+("function_called(BreakoutGame0, bitIsSet, Boolean")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0) != 0))+(", variable=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 0)))+(", bit=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(func__var == 10) {
System.out.println(""+("function_called(BreakoutGame0, createBricks, void")+(", _")+(")"));

} else {
if(func__var == 11) {
System.out.println(""+("function_called(BreakoutGame0, bricksLeft, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 0)))+(")"));

} else {
if(func__var == 12) {
System.out.println(""+("function_called(BreakoutGame0, drawBrick, void")+(", _")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(func__var == 13) {
System.out.println(""+("function_called(BreakoutGame0, removeBrick, void")+(", _")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(func__var == 14) {
System.out.println(""+("function_called(BreakoutGame0, collideBrick, Boolean")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0) != 0))+(", xpos=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ypos=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(")"));

} else {
if(func__var == 15) {
System.out.println(""+("function_called(BreakoutGame0, drawLevel, void")+(", _")+(")"));

} else {
if(func__var == 16) {
System.out.println(""+("function_called(BreakoutGame0, incrementScore, void")+(", _")+(", diff=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])) << 0)))+(")"));

} else {
if(func__var == 17) {
System.out.println(""+("function_called(BreakoutGame0, drawScore, void")+(", _")+(")"));

} else {
if(func__var == 18) {
System.out.println(""+("function_called(BreakoutGame0, drawLives, void")+(", _")+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 1) {
final byte prop_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

if(inst_var == 0) {
if(prop_var == 0) {
System.out.println(""+("property_changed(BreakoutGame0, XDISPSIZE, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 1) {
System.out.println(""+("property_changed(BreakoutGame0, YDISPSIZE, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 2) {
System.out.println(""+("property_changed(BreakoutGame0, SCALE, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 3) {
System.out.println(""+("property_changed(BreakoutGame0, XMAX, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 4) {
System.out.println(""+("property_changed(BreakoutGame0, YMAX, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 5) {
System.out.println(""+("property_changed(BreakoutGame0, TOP, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 6) {
System.out.println(""+("property_changed(BreakoutGame0, BOTTOM, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 7) {
System.out.println(""+("property_changed(BreakoutGame0, LEFT, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 8) {
System.out.println(""+("property_changed(BreakoutGame0, RIGHT, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 9) {
System.out.println(""+("property_changed(BreakoutGame0, br, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 10) {
System.out.println(""+("property_changed(BreakoutGame0, bx, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 11) {
System.out.println(""+("property_changed(BreakoutGame0, by, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 12) {
System.out.println(""+("property_changed(BreakoutGame0, dx, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 13) {
System.out.println(""+("property_changed(BreakoutGame0, dy, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 14) {
System.out.println(""+("property_changed(BreakoutGame0, padx, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 15) {
System.out.println(""+("property_changed(BreakoutGame0, pady, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 16) {
System.out.println(""+("property_changed(BreakoutGame0, padlen, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 17) {
System.out.println(""+("property_changed(BreakoutGame0, prevBX, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 18) {
System.out.println(""+("property_changed(BreakoutGame0, prevBY, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 19) {
System.out.println(""+("property_changed(BreakoutGame0, bgcolor, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 20) {
System.out.println(""+("property_changed(BreakoutGame0, fgcolor, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 21) {
System.out.println(""+("property_changed(BreakoutGame0, period, UInt16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 22) {
System.out.println(""+("property_changed(BreakoutGame0, prevPX, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 23) {
System.out.println(""+("property_changed(BreakoutGame0, prevPY, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 24) {
System.out.println(""+("property_changed(BreakoutGame0, BRICK_ROWS, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 25) {
System.out.println(""+("property_changed(BreakoutGame0, BRICK_HEIGHT, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 26) {
System.out.println(""+("property_changed(BreakoutGame0, bricks, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 27) {
System.out.println(""+("property_changed(BreakoutGame0, score, Int16")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(prop_var == 28) {
System.out.println(""+("property_changed(BreakoutGame0, lives, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(prop_var == 29) {
System.out.println(""+("property_changed(BreakoutGame0, level, UInt8")+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(", ")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 2) {
final byte portID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

final byte messageID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])));

if(inst_var == 0) {
if(portID_var == 0 && messageID_var == 21) {
System.out.println(""+("message_lost(BreakoutGame0, clock, timer_timeout")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 15) {
System.out.println(""+("message_lost(BreakoutGame0, display, displayReady")+(")"));

} else {
if(portID_var == 2 && messageID_var == 17) {
System.out.println(""+("message_lost(BreakoutGame0, controller, position")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7)])) << 0)))+(")"));

} else {
if(portID_var == 4 && messageID_var == 0) {
System.out.println(""+("message_lost(BreakoutGame0, game, lostBall")+(")"));

} else {
if(portID_var == 6 && messageID_var == 0) {
System.out.println(""+("message_lost(BreakoutGame0, pro_game, lostBall")+(")"));

} else {
if(portID_var == 4 && messageID_var == 1) {
System.out.println(""+("message_lost(BreakoutGame0, game, nextLevel")+(")"));

} else {
if(portID_var == 6 && messageID_var == 1) {
System.out.println(""+("message_lost(BreakoutGame0, pro_game, nextLevel")+(")"));

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 3) {
final byte portID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

final byte messageID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])));

if(inst_var == 0) {
if(portID_var == 0 && messageID_var == 19) {
System.out.println(""+("message_sent(BreakoutGame0, clock, timer_start")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", time=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(portID_var == 0 && messageID_var == 20) {
System.out.println(""+("message_sent(BreakoutGame0, clock, timer_cancel")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 5) {
System.out.println(""+("message_sent(BreakoutGame0, display, clear")+(")"));

} else {
if(portID_var == 1 && messageID_var == 6) {
System.out.println(""+("message_sent(BreakoutGame0, display, setColor")+(", r=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", g=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", b=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 7) {
System.out.println(""+("message_sent(BreakoutGame0, display, setBGColor")+(", r=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", g=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", b=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 8) {
System.out.println(""+("message_sent(BreakoutGame0, display, drawRect")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", width=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(", height=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 9) {
System.out.println(""+("message_sent(BreakoutGame0, display, fillRect")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", width=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(", height=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 10) {
System.out.println(""+("message_sent(BreakoutGame0, display, drawInteger")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", v=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7)])) << 0)))+(", digits=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8)])) << 0)))+(", scale=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(9)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 11) {
System.out.println(""+("message_sent(BreakoutGame0, display, drawThingML")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 12) {
System.out.println(""+("message_sent(BreakoutGame0, display, create")+(", xsize=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", ysize=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(")"));

} else {
if(portID_var == 1 && messageID_var == 14) {
System.out.println(""+("message_sent(BreakoutGame0, display, update")+(")"));

} else {
if(portID_var == 3 && messageID_var == 18) {
System.out.println(""+("message_sent(BreakoutGame0, ia, updateIA")+(", ballx=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 0)))+(", bally=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7)])) << 0)))+(", padx=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(9)])) << 0)))+(", pady=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(10)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(11)])) << 0)))+(")"));

} else {
if(portID_var == 4 && messageID_var == 0) {
System.out.println(""+("message_sent(BreakoutGame0, game, lostBall")+(")"));

} else {
if(portID_var == 5 && messageID_var == 0) {
System.out.println(""+("message_sent(BreakoutGame0, req_game, lostBall")+(")"));

} else {
if(portID_var == 4 && messageID_var == 1) {
System.out.println(""+("message_sent(BreakoutGame0, game, nextLevel")+(")"));

} else {
if(portID_var == 5 && messageID_var == 1) {
System.out.println(""+("message_sent(BreakoutGame0, req_game, nextLevel")+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 4) {
final byte handlerID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

if(inst_var == 0) {
if(handlerID_var == 0) {
System.out.println(""+("message_handled(BreakoutGame0, controller, position, SC, _, ")+(", x=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])) << 0)))+(", y=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])) << 8 | get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6)])) << 0)))+(")"));

} else {
if(handlerID_var == 1) {
System.out.println(""+("message_handled(BreakoutGame0, display, displayReady, INIT, LAUNCH, ")+(")"));

} else {
if(handlerID_var == 2) {
System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, LAUNCH, _, ")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(handlerID_var == 3) {
System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, LAUNCH, PLAY, ")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(handlerID_var == 4) {
System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, PLAY, _, ")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(handlerID_var == 5) {
System.out.println(""+("message_handled(BreakoutGame0, game, lostBall, PLAY, LOSTBALL, ")+(")"));

} else {
if(handlerID_var == 6) {
System.out.println(""+("message_handled(BreakoutGame0, game, nextLevel, PLAY, NEXTLEVEL, ")+(")"));

} else {
if(handlerID_var == 7) {
System.out.println(""+("message_handled(BreakoutGame0, pro_game, lostBall, PLAY, LOSTBALL, ")+(")"));

} else {
if(handlerID_var == 8) {
System.out.println(""+("message_handled(BreakoutGame0, pro_game, nextLevel, PLAY, NEXTLEVEL, ")+(")"));

} else {
if(handlerID_var == 9) {
System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, LOSTBALL, LAUNCH, ")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(handlerID_var == 10) {
System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, LOSTBALL, GAMEOVER, ")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

} else {
if(handlerID_var == 11) {
System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, NEXTLEVEL, LAUNCH, ")+(", id=")+(((get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])) << 0)))+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
System.out.println(""+("unknown"));

}

}

}

}

}
}
}
