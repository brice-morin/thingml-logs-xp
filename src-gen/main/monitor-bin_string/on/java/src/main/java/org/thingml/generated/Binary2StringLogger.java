/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : Binary2StringLogger
 **/
public class Binary2StringLogger extends Component implements IBinary2StringLogger_log {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tACTIVATE_ON_STARTUP = " + Logger_ACTIVATE_ON_STARTUP_var;
result += "\tHAS_SIGNED_BYTE = " + Logger_HAS_SIGNED_BYTE_var;
result += "";
return result;
}

public synchronized void log_on_via_log(){
final Event _msg = log_onType.instantiate();
_msg.setPort(log_port);
receive(_msg);
}

public synchronized void log_off_via_log(){
final Event _msg = log_offType.instantiate();
_msg.setPort(log_port);
receive(_msg);
}

public synchronized void log_via_log(byte[] LogMsgs_log_payload_var, int LogMsgs_log_size_var){
final Event _msg = logType.instantiate(LogMsgs_log_payload_var, LogMsgs_log_size_var);
_msg.setPort(log_port);
receive(_msg);
}

//Attributes
private boolean Logger_ACTIVATE_ON_STARTUP_var;
private boolean Logger_HAS_SIGNED_BYTE_var;
//Ports
private Port log_port;
//Message types
protected final Log_onMessageType log_onType = new Log_onMessageType();
protected final Log_offMessageType log_offType = new Log_offMessageType();
protected final LogMessageType logType = new LogMessageType();
//Empty Constructor
public Binary2StringLogger() {
super();
}

//Getters and Setters for non readonly/final attributes
public boolean getLogger_ACTIVATE_ON_STARTUP_var() {
return Logger_ACTIVATE_ON_STARTUP_var;
}

public Binary2StringLogger initLogger_ACTIVATE_ON_STARTUP_var(boolean Logger_ACTIVATE_ON_STARTUP_var) {
this.Logger_ACTIVATE_ON_STARTUP_var = Logger_ACTIVATE_ON_STARTUP_var;
return this;
}

public boolean getLogger_HAS_SIGNED_BYTE_var() {
return Logger_HAS_SIGNED_BYTE_var;
}

public Binary2StringLogger initLogger_HAS_SIGNED_BYTE_var(boolean Logger_HAS_SIGNED_BYTE_var) {
this.Logger_HAS_SIGNED_BYTE_var = Logger_HAS_SIGNED_BYTE_var;
return this;
}

//Getters for Ports
public Port getLog_port() {
return log_port;
}
private CompositeState buildLogger(){
final AtomicState state_Logger_null_STARTUP = new AtomicState("STARTUP");
final AtomicState state_Logger_null_ON = new AtomicState("ON");
final AtomicState state_Logger_null_OFF = new AtomicState("OFF");
Transition h1704065258 = new Transition();
h1704065258.from(state_Logger_null_STARTUP).to(state_Logger_null_ON);
h1704065258.guard((Event e)->{
return getLogger_ACTIVATE_ON_STARTUP_var();
});

Transition h664555067 = new Transition();
h664555067.from(state_Logger_null_STARTUP).to(state_Logger_null_OFF);
h664555067.guard((Event e)->{
return  !(getLogger_ACTIVATE_ON_STARTUP_var());
});

Handler h936618636 = new Handler();
h936618636.from(state_Logger_null_ON);
h936618636.event(logType);
h936618636.port(log_port);
h936618636.action((Event e)->{
final LogMessageType.LogMessage log = (LogMessageType.LogMessage) e;
do_log((byte[]) (log.payload), (int) (log.size));
});

Transition h488654523 = new Transition();
h488654523.from(state_Logger_null_ON).to(state_Logger_null_OFF);
h488654523.event(log_offType);
h488654523.port(log_port);
Transition h1000119179 = new Transition();
h1000119179.from(state_Logger_null_OFF).to(state_Logger_null_ON);
h1000119179.event(log_onType);
h1000119179.port(log_port);
final CompositeState state_Logger = new CompositeState("null");
state_Logger.onEntry(()->{
});
state_Logger.add(state_Logger_null_STARTUP);
state_Logger.add(state_Logger_null_ON);
state_Logger.add(state_Logger_null_OFF);
state_Logger.initial(state_Logger_null_STARTUP);
return state_Logger;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
log_port = new Port("log", this);
} else {
log_port = ((Binary2StringLogger)root).log_port;
}
if (session == null){
//Init state machine
behavior = buildLogger();
}
return this;
}

 byte get_byte(final byte Binary2StringLogger_get_byte_b_var) {
if(getLogger_HAS_SIGNED_BYTE_var()) {
return (byte) ((Binary2StringLogger_get_byte_b_var & 0xFF));

} else {
return (byte) (Binary2StringLogger_get_byte_b_var);

}
}
 String stateName(final byte Binary2StringLogger_stateName_id_var) {
if(Binary2StringLogger_stateName_id_var == 0) {
return (String) ("BreakoutGame.SC");

} else {
if(Binary2StringLogger_stateName_id_var == 1) {
return (String) ("BreakoutGame.SC.INIT");

} else {
if(Binary2StringLogger_stateName_id_var == 2) {
return (String) ("BreakoutGame.SC.LAUNCH");

} else {
if(Binary2StringLogger_stateName_id_var == 3) {
return (String) ("BreakoutGame.SC.PLAY");

} else {
if(Binary2StringLogger_stateName_id_var == 4) {
return (String) ("BreakoutGame.SC.LOSTBALL");

} else {
if(Binary2StringLogger_stateName_id_var == 5) {
return (String) ("BreakoutGame.SC.NEXTLEVEL");

} else {
if(Binary2StringLogger_stateName_id_var == 6) {
return (String) ("BreakoutGame.SC.GAMEOVER");

} else {
if(Binary2StringLogger_stateName_id_var == 7) {
return (String) ("Logger");

} else {
if(Binary2StringLogger_stateName_id_var == 8) {
return (String) ("Logger.null.STARTUP");

} else {
if(Binary2StringLogger_stateName_id_var == 9) {
return (String) ("Logger.null.ON");

} else {
if(Binary2StringLogger_stateName_id_var == 10) {
return (String) ("Logger.null.OFF");

} else {
if(Binary2StringLogger_stateName_id_var == 11) {
return (String) ("HeadlessDisplay");

} else {
if(Binary2StringLogger_stateName_id_var == 12) {
return (String) ("HeadlessDisplay.null.INIT");

} else {
if(Binary2StringLogger_stateName_id_var == 13) {
return (String) ("HeadlessDisplay.null.MOCK");

} else {
if(Binary2StringLogger_stateName_id_var == 14) {
return (String) ("BasicIAController.SC");

} else {
if(Binary2StringLogger_stateName_id_var == 15) {
return (String) ("BasicIAController.SC.Following");

} else {
if(Binary2StringLogger_stateName_id_var == 16) {
return (String) ("TimerJava.SoftTimer");

} else {
if(Binary2StringLogger_stateName_id_var == 17) {
return (String) ("TimerJava.SoftTimer.default");

} else {
if(Binary2StringLogger_stateName_id_var == 18) {
return (String) ("TimerJS.SoftTimer");

} else {
if(Binary2StringLogger_stateName_id_var == 19) {
return (String) ("TimerJS.SoftTimer.default");

} else {
if(Binary2StringLogger_stateName_id_var == 20) {
return (String) ("TimerNodeJS.SoftTimer");

} else {
if(Binary2StringLogger_stateName_id_var == 21) {
return (String) ("TimerNodeJS.SoftTimer.default");

} else {
if(Binary2StringLogger_stateName_id_var == 22) {
return (String) ("TimerPosix.SoftTimer");

} else {
if(Binary2StringLogger_stateName_id_var == 23) {
return (String) ("TimerPosix.SoftTimer.default");

} else {
if(Binary2StringLogger_stateName_id_var == 24) {
return (String) ("TimerArduino.SoftTimer");

} else {
if(Binary2StringLogger_stateName_id_var == 25) {
return (String) ("TimerArduino.SoftTimer.default");

} else {
if(Binary2StringLogger_stateName_id_var == 26) {
return (String) ("TimerGo.SoftTimer");

} else {
if(Binary2StringLogger_stateName_id_var == 27) {
return (String) ("TimerGo.SoftTimer.default");

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}
return (String) ("unknown");
}
 void do_log(final byte[] Binary2StringLogger_do_log_payload_var, final int Binary2StringLogger_do_log_size_var) {
final byte log_type_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(0)])));

final byte inst_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(1)])));

if(log_type_var == 0) {
final byte func__var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

if(inst_var == 0) {
if(func__var == 1) {
System.out.println(""+("function_called(BreakoutGame0, initColors, void")+(", _")+(")"));

} else {
if(func__var == 2) {
System.out.println(""+("function_called(BreakoutGame0, resetBall, void")+(", _")+(")"));

} else {
if(func__var == 3) {
System.out.println(""+("function_called(BreakoutGame0, eraseBall, void")+(", _")+(")"));

} else {
if(func__var == 4) {
System.out.println(""+("function_called(BreakoutGame0, drawBall, void")+(", _")+(")"));

} else {
if(func__var == 5) {
System.out.println(""+("function_called(BreakoutGame0, erasePad, void")+(", _")+(")"));

} else {
if(func__var == 6) {
System.out.println(""+("function_called(BreakoutGame0, drawPad, void")+(", _")+(")"));

} else {
if(func__var == 7) {
final byte[] bin_c_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int c_var = (int) ((bin_c_var[(int)(0)] << 8 | bin_c_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
c_var = (int) (c_var + 256);

}
System.out.println(""+("function_called(BreakoutGame0, drawCountDown, void")+(", _")+(", c=")+(c_var)+(")"));

} else {
if(func__var == 8) {
System.out.println(""+("function_called(BreakoutGame0, drawWalls, void")+(", _")+(")"));

} else {
if(func__var == 9) {
final byte[] bin_result_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(Binary2StringLogger_do_log_size_var - 1 + 0)])))});

boolean result_var = (boolean) ((bin_result_var[(int)(0)] << 0) != 0);

final byte[] bin_variable_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int variable_var = (int) ((bin_variable_var[(int)(0)] << 0));

final byte[] bin_bit_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int bit_var = (int) ((bin_bit_var[(int)(0)] << 0));

System.out.println(""+("function_called(BreakoutGame0, bitIsSet, Boolean")+(", ")+(result_var)+(", variable=")+(variable_var)+(", bit=")+(bit_var)+(")"));

} else {
if(func__var == 10) {
System.out.println(""+("function_called(BreakoutGame0, createBricks, void")+(", _")+(")"));

} else {
if(func__var == 11) {
final byte[] bin_result_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(Binary2StringLogger_do_log_size_var - 1 + 0)])))});

int result_var = (int) ((bin_result_var[(int)(0)] << 0));

System.out.println(""+("function_called(BreakoutGame0, bricksLeft, UInt8")+(", ")+(result_var)+(")"));

} else {
if(func__var == 12) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 0));

final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 0));

System.out.println(""+("function_called(BreakoutGame0, drawBrick, void")+(", _")+(", x=")+(x_var)+(", y=")+(y_var)+(")"));

} else {
if(func__var == 13) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 0));

final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 0));

System.out.println(""+("function_called(BreakoutGame0, removeBrick, void")+(", _")+(", x=")+(x_var)+(", y=")+(y_var)+(")"));

} else {
if(func__var == 14) {
final byte[] bin_result_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(Binary2StringLogger_do_log_size_var - 1 + 0)])))});

boolean result_var = (boolean) ((bin_result_var[(int)(0)] << 0) != 0);

final byte[] bin_xpos_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int xpos_var = (int) ((bin_xpos_var[(int)(0)] << 8 | bin_xpos_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
xpos_var = (int) (xpos_var + 256);

}
final byte[] bin_ypos_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int ypos_var = (int) ((bin_ypos_var[(int)(0)] << 8 | bin_ypos_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
ypos_var = (int) (ypos_var + 256);

}
System.out.println(""+("function_called(BreakoutGame0, collideBrick, Boolean")+(", ")+(result_var)+(", xpos=")+(xpos_var)+(", ypos=")+(ypos_var)+(")"));

} else {
if(func__var == 15) {
System.out.println(""+("function_called(BreakoutGame0, drawLevel, void")+(", _")+(")"));

} else {
if(func__var == 16) {
final byte[] bin_diff_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int diff_var = (int) ((bin_diff_var[(int)(0)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
diff_var = (int) (diff_var + 1);

}
System.out.println(""+("function_called(BreakoutGame0, incrementScore, void")+(", _")+(", diff=")+(diff_var)+(")"));

} else {
if(func__var == 17) {
System.out.println(""+("function_called(BreakoutGame0, drawScore, void")+(", _")+(")"));

} else {
if(func__var == 18) {
System.out.println(""+("function_called(BreakoutGame0, drawLives, void")+(", _")+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 1) {
final byte prop_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

if(inst_var == 0) {
if(prop_var == 0) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, XDISPSIZE, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 1) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, YDISPSIZE, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 2) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, SCALE, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 3) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, XMAX, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 4) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, YMAX, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 5) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, TOP, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 6) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, BOTTOM, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 7) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, LEFT, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 8) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, RIGHT, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 9) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, br, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 10) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, bx, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 11) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, by, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 12) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, dx, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 13) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, dy, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 14) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, padx, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 15) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, pady, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 16) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, padlen, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 17) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, prevBX, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 18) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, prevBY, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 19) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, bgcolor, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 20) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, fgcolor, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 21) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, period, UInt16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 22) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, prevPX, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 23) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, prevPY, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 24) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, BRICK_ROWS, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 25) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, BRICK_HEIGHT, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 26) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, bricks, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 27) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 1)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 8 | bin_old_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
old_var = (int) (old_var + 256);

}
final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 8 | bin_new__var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
new__var = (int) (new__var + 256);

}
System.out.println(""+("property_changed(BreakoutGame0, score, Int16")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 28) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, lives, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

} else {
if(prop_var == 29) {
final byte[] bin_old_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3 + 0)])))});

int old_var = (int) ((bin_old_var[(int)(0)] << 0));

final byte[] bin_new__var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int new__var = (int) ((bin_new__var[(int)(0)] << 0));

System.out.println(""+("property_changed(BreakoutGame0, level, UInt8")+(", ")+(old_var)+(", ")+(new__var)+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 2) {
final byte portID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

final byte messageID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])));

if(inst_var == 0) {
if(portID_var == 1 && messageID_var == 22) {
final byte[] bin_id_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int id_var = (int) ((bin_id_var[(int)(0)] << 0));

System.out.println(""+("message_lost(BreakoutGame0, clock, timer_timeout")+(", id=")+(id_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 16) {
System.out.println(""+("message_lost(BreakoutGame0, display, displayReady")+(")"));

} else {
if(portID_var == 3 && messageID_var == 18) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 1)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 8 | bin_x_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
x_var = (int) (x_var + 256);

}
final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 1)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 8 | bin_y_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
y_var = (int) (y_var + 256);

}
System.out.println(""+("message_lost(BreakoutGame0, controller, position")+(", x=")+(x_var)+(", y=")+(y_var)+(")"));

} else {
if(portID_var == 5 && messageID_var == 1) {
System.out.println(""+("message_lost(BreakoutGame0, game, lostBall")+(")"));

} else {
if(portID_var == 7 && messageID_var == 1) {
System.out.println(""+("message_lost(BreakoutGame0, pro_game, lostBall")+(")"));

} else {
if(portID_var == 5 && messageID_var == 2) {
System.out.println(""+("message_lost(BreakoutGame0, game, nextLevel")+(")"));

} else {
if(portID_var == 7 && messageID_var == 2) {
System.out.println(""+("message_lost(BreakoutGame0, pro_game, nextLevel")+(")"));

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 3) {
final byte portID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

final byte messageID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])));

if(inst_var == 0) {
if(portID_var == 1 && messageID_var == 20) {
final byte[] bin_id_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int id_var = (int) ((bin_id_var[(int)(0)] << 0));

final byte[] bin_time_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 1)])))});

int time_var = (int) ((bin_time_var[(int)(0)] << 8 | bin_time_var[(int)(1)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, clock, timer_start")+(", id=")+(id_var)+(", time=")+(time_var)+(")"));

} else {
if(portID_var == 1 && messageID_var == 21) {
final byte[] bin_id_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int id_var = (int) ((bin_id_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, clock, timer_cancel")+(", id=")+(id_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 6) {
System.out.println(""+("message_sent(BreakoutGame0, display, clear")+(")"));

} else {
if(portID_var == 2 && messageID_var == 7) {
final byte[] bin_r_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int r_var = (int) ((bin_r_var[(int)(0)] << 0));

final byte[] bin_g_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int g_var = (int) ((bin_g_var[(int)(0)] << 0));

final byte[] bin_b_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)])))});

int b_var = (int) ((bin_b_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, setColor")+(", r=")+(r_var)+(", g=")+(g_var)+(", b=")+(b_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 8) {
final byte[] bin_r_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int r_var = (int) ((bin_r_var[(int)(0)] << 0));

final byte[] bin_g_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int g_var = (int) ((bin_g_var[(int)(0)] << 0));

final byte[] bin_b_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)])))});

int b_var = (int) ((bin_b_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, setBGColor")+(", r=")+(r_var)+(", g=")+(g_var)+(", b=")+(b_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 9) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 0));

final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 0));

final byte[] bin_width_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)])))});

int width_var = (int) ((bin_width_var[(int)(0)] << 0));

final byte[] bin_height_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7 + 0)])))});

int height_var = (int) ((bin_height_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, drawRect")+(", x=")+(x_var)+(", y=")+(y_var)+(", width=")+(width_var)+(", height=")+(height_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 10) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 0));

final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 0));

final byte[] bin_width_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)])))});

int width_var = (int) ((bin_width_var[(int)(0)] << 0));

final byte[] bin_height_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(7 + 0)])))});

int height_var = (int) ((bin_height_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, fillRect")+(", x=")+(x_var)+(", y=")+(y_var)+(", width=")+(width_var)+(", height=")+(height_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 11) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 0));

final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 0));

final byte[] bin_v_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 1)])))});

int v_var = (int) ((bin_v_var[(int)(0)] << 8 | bin_v_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
v_var = (int) (v_var + 256);

}
final byte[] bin_digits_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8 + 0)])))});

int digits_var = (int) ((bin_digits_var[(int)(0)] << 0));

final byte[] bin_scale_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(9 + 0)])))});

int scale_var = (int) ((bin_scale_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, drawInteger")+(", x=")+(x_var)+(", y=")+(y_var)+(", v=")+(v_var)+(", digits=")+(digits_var)+(", scale=")+(scale_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 12) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 0));

final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, drawThingML")+(", x=")+(x_var)+(", y=")+(y_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 13) {
final byte[] bin_xsize_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)])))});

int xsize_var = (int) ((bin_xsize_var[(int)(0)] << 0));

final byte[] bin_ysize_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5 + 0)])))});

int ysize_var = (int) ((bin_ysize_var[(int)(0)] << 0));

System.out.println(""+("message_sent(BreakoutGame0, display, create")+(", xsize=")+(xsize_var)+(", ysize=")+(ysize_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 15) {
System.out.println(""+("message_sent(BreakoutGame0, display, update")+(")"));

} else {
if(portID_var == 4 && messageID_var == 19) {
final byte[] bin_ballx_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4 + 1)])))});

int ballx_var = (int) ((bin_ballx_var[(int)(0)] << 8 | bin_ballx_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
ballx_var = (int) (ballx_var + 256);

}
final byte[] bin_bally_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 1)])))});

int bally_var = (int) ((bin_bally_var[(int)(0)] << 8 | bin_bally_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
bally_var = (int) (bally_var + 256);

}
final byte[] bin_padx_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8 + 1)])))});

int padx_var = (int) ((bin_padx_var[(int)(0)] << 8 | bin_padx_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
padx_var = (int) (padx_var + 256);

}
final byte[] bin_pady_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(10 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(10 + 1)])))});

int pady_var = (int) ((bin_pady_var[(int)(0)] << 8 | bin_pady_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
pady_var = (int) (pady_var + 256);

}
System.out.println(""+("message_sent(BreakoutGame0, ia, updateIA")+(", ballx=")+(ballx_var)+(", bally=")+(bally_var)+(", padx=")+(padx_var)+(", pady=")+(pady_var)+(")"));

} else {
if(portID_var == 5 && messageID_var == 1) {
System.out.println(""+("message_sent(BreakoutGame0, game, lostBall")+(")"));

} else {
if(portID_var == 6 && messageID_var == 1) {
System.out.println(""+("message_sent(BreakoutGame0, req_game, lostBall")+(")"));

} else {
if(portID_var == 5 && messageID_var == 2) {
System.out.println(""+("message_sent(BreakoutGame0, game, nextLevel")+(")"));

} else {
if(portID_var == 6 && messageID_var == 2) {
System.out.println(""+("message_sent(BreakoutGame0, req_game, nextLevel")+(")"));

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

} else {
if(log_type_var == 4) {
final byte portID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(2)])));

final byte messageID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(3)])));

final byte sourceID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(4)])));

final byte targetID_var = (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(5)])));

if(inst_var == 0) {
if(portID_var == 1 && messageID_var == 22) {
final byte[] bin_id_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)])))});

int id_var = (int) ((bin_id_var[(int)(0)] << 0));

System.out.println(""+("message_handled(BreakoutGame0, clock, timer_timeout, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(", id=")+(id_var)+(")"));

} else {
if(portID_var == 2 && messageID_var == 16) {
System.out.println(""+("message_handled(BreakoutGame0, display, displayReady, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(")"));

} else {
if(portID_var == 3 && messageID_var == 18) {
final byte[] bin_x_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(6 + 1)])))});

int x_var = (int) ((bin_x_var[(int)(0)] << 8 | bin_x_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
x_var = (int) (x_var + 256);

}
final byte[] bin_y_var = (byte[]) (new byte[]{(byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8 + 0)]))), (byte) (get_byte((byte) (Binary2StringLogger_do_log_payload_var[(int)(8 + 1)])))});

int y_var = (int) ((bin_y_var[(int)(0)] << 8 | bin_y_var[(int)(1)] << 0));

if( !(getLogger_HAS_SIGNED_BYTE_var())) {
y_var = (int) (y_var + 256);

}
System.out.println(""+("message_handled(BreakoutGame0, controller, position, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(", x=")+(x_var)+(", y=")+(y_var)+(")"));

} else {
if(portID_var == 5 && messageID_var == 1) {
System.out.println(""+("message_handled(BreakoutGame0, game, lostBall, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(")"));

} else {
if(portID_var == 7 && messageID_var == 1) {
System.out.println(""+("message_handled(BreakoutGame0, pro_game, lostBall, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(")"));

} else {
if(portID_var == 5 && messageID_var == 2) {
System.out.println(""+("message_handled(BreakoutGame0, game, nextLevel, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(")"));

} else {
if(portID_var == 7 && messageID_var == 2) {
System.out.println(""+("message_handled(BreakoutGame0, pro_game, nextLevel, ")+(stateName((byte) (sourceID_var)))+(", ")+(stateName((byte) (targetID_var)))+(")"));

}

}

}

}

}

}

}

}

} else {
System.out.println(""+("unknown"));

}

}

}

}

}
}
}
